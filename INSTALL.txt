
INSTALLATION INSTRUCTIONS FOR DRIVEASSISTIFY
--------------------------------------------

1. Prerequisites:
   Before compiling the program, ensure you have the required dependencies installed on your system.
   Specifically, you'll need the gcc compiler and pkg-config utility, along with the gtk+-3.0 and vte-2.91 libraries.

   On a Debian-based system, you can install the dependencies using the following command:

       sudo apt-get install build-essential pkg-config libgtk-3-dev libvte-2.91-dev

   On Arch Linux, use:

       sudo pacman -S base-devel gtk3 vte3

   On Fedora, use:

       sudo dnf install gcc make gtk3-devel vte291-devel

   For other Linux distributions, install the corresponding development and utility packages using your systemâ€™s package manager.

   For full functionality, install the following optional packages:
   parted fdisk e2fsprogs ntfs-3g exfatprogs dosfstools xfsprogs btrfs-progs smartmontools grub-pc

   On a Debian-based system, you can install the optional packages using the following command:

       sudo apt-get install parted fdisk e2fsprogs ntfs-3g exfatprogs dosfstools xfsprogs btrfs-progs smartmontools grub-pc

   On Arch Linux:

       sudo pacman -S parted gptfdisk e2fsprogs ntfs-3g exfatprogs dosfstools xfsprogs btrfs-progs smartmontools grub

   On Fedora:

       sudo dnf install parted util-linux e2fsprogs ntfs-3g exfatprogs dosfstools xfsprogs btrfs-progs smartmontools grub2

   Note: For correct updating of partition tables after operations, DriveAssistify automatically uses partprobe (included in the parted package).
   If partprobe is not available, it falls back to blockdev --rereadpt (included in util-linux, which is present on all Linux systems).
   No additional installation is required for this fallback.

   Note: Depending on your Linux distribution and its version, the exFAT support package may be named either exfatprogs or exfat-utils.
   If you encounter an error about a missing package, replace exfatprogs with exfat-utils (or vice versa) in the installation command appropriate for your distribution.

   Note: Without the optional packages, some features (such as partition labeling, boot flag management, filesystem repair, or SMART diagnostics) may not be available.

2. Download the Program:
   Download the source code of DriveAssistify from the official repository or the provided location.
   If the source code is in a compressed format, extract it using:

       tar -xvf driveassistify.tar.gz  (or use unzip for .zip archives)

3. Compile the Program:
   Open a terminal in the directory containing the `driveassistify.c` file. Run the following command:

       gcc driveassistify.c -o driveassistify $(pkg-config --cflags --libs gtk+-3.0 vte-2.91)

   This will generate an executable binary file named `driveassistify`.

4. Run the Program:
   After compiling the program, you can run it by specifying the correct path to the binary file.
   If placed in `/usr/local/bin`, you can run it with:

       driveassistify

   If the binary is located elsewhere, specify the full or relative path, for example:

       /path/to/driveassistify

   To run the program from anywhere without specifying the full path, add its directory to the system's `$PATH` variable.

5. Uninstall the Program:
   To uninstall DriveAssistify, remove the binary file from its installation directory.
   If installed in `/usr/local/bin`, run:

       sudo rm /usr/local/bin/driveassistify

   If installed elsewhere, adjust the path accordingly.

6. Troubleshooting:
   If you encounter issues during installation or execution, ensure that all dependencies are installed.
   Also, verify that the correct paths to libraries and executables are specified.
   Checking system logs or running the program in a terminal may provide useful error messages.

7. License Information:
   DriveAssistify is licensed under the GNU General Public License (GPL) Version 3.0.
   Please refer to the included `LICENSE` file for the full terms and conditions.

For Inquiries, Please Contact:
Email: maximkursua@gmail.com
